{"version":3,"sources":["search/Search.js","components/RepositoryTopContributors.js","components/RepositorySummaryDetails.js","summary/Summary.js","components/GithubRepositoryItem.js","App.js","index.js"],"names":["source","RepositoryTopContributors","state","fetching","contributors","repository","this","props","axios","get","contributors_url","data","setState","slice","_this$state","react_default","a","createElement","react","className","id","length","contributorsRows","map","contributor","key","login","src","avatar_url","alt","style","height","marginRight","width","target","href","html_url","rel","contributions","toString","replace","Component","RepositorySummaryDetails","owner","name","homepage","type","description","stargazers_count","watchers_count","Date","created_at","toDateString","open_issues_count","Summary","repositoryToShow","onClick","onBackToSearch","components_RepositorySummaryDetails","components_RepositoryTopContributors","GithubRepositoryItem","_ref","optionsProps","highlightMatches","_repository$owner","es","search","text","CancelToken","REPOSITORIES_SEARCH_URI","Search","_Component","_getPrototypeOf2","_this","Object","classCallCheck","_len","arguments","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","isLoading","result","isHighlightMatchesOn","perPage","handleInputChange","clearTimeout","timeout","cancel","setTimeout","handleSearch","asyncToGenerator","regenerator_default","mark","_callee","query","_ref2","wrap","_context","prev","next","cancelToken","token","sent","t0","console","error","stop","_x","handleOnChange","selected","slicedToArray","onSelectRepository","inherits","createClass","value","_this2","options","items","onChange","bsSize","labelKey","onInputChange","onSearch","placeholder","renderMenuItemChildren","option","components_GithubRepositoryItem","GithubRepositoriesApp","search_Search","summary_Summary","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.38440132.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {AsyncTypeahead} from 'react-bootstrap-typeahead';\nimport GithubRepositoryItem from 'src/components/GithubRepositoryItem';\nimport axios from 'axios';\n\nconst CancelToken = axios.CancelToken;\nlet source;\n\nconst REPOSITORIES_SEARCH_URI = 'https://api.github.com/search/repositories';\n\n\nexport class Search extends Component {\n  state = {\n    isLoading: false,\n    result: {},\n    isHighlightMatchesOn: false,\n    perPage: 10,\n  };\n\n  componentDidMount() {\n    // this.props.router.prefetch('/summary');\n  }\n\n  handleInputChange = text => {\n    clearTimeout(this.timeout);\n\n    if (!text || text.length < 3) {\n      if (source) {\n        source.cancel();\n      }\n\n      return this.setState({isLoading: false, result: {}});\n    }\n\n    this.timeout = setTimeout(this.handleSearch, 350, text);\n  };\n\n  handleSearch = async query => {\n    this.setState({isLoading: true});\n\n    if (source) {\n      source.cancel();\n    }\n\n    source = CancelToken.source();\n\n    try {\n      const {data} = await axios.get(`${REPOSITORIES_SEARCH_URI}?q=${query} in:name&per_page=10`, {\n        cancelToken: source.token\n      });\n\n      this.setState({\n        isLoading: false,\n        result: data,\n      });\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  handleOnChange = selected => {\n    const [repository] = selected;\n    this.props.onSelectRepository(repository);\n  };\n\n  render() {\n    const {result, isLoading, isHighlightMatchesOn} = this.state;\n    const {items: options} = result;\n    return (\n      <div className=\"row\">\n        <div className=\"col-md-6\">\n          <div className=\"checkbox\">\n            <label>\n              <input type=\"checkbox\" value={isHighlightMatchesOn} onChange={() => this.setState({isHighlightMatchesOn: !isHighlightMatchesOn})}/> Highlight matches\n            </label>\n          </div>\n          <AsyncTypeahead\n            id=\"repo-typeahead\"\n            bsSize=\"large\"\n            isLoading={isLoading}\n            options={options}\n            labelKey=\"name\"\n            onInputChange={this.handleInputChange}\n            onChange={this.handleOnChange}\n            onSearch={() => {\n            }}\n            placeholder=\"Search for a Github repository...\"\n            renderMenuItemChildren={(option, props) => (\n              <GithubRepositoryItem\n                highlightMatches={isHighlightMatchesOn}\n                key={option.id}\n                repository={option}\n                optionsProps={props}/>\n            )}\n          />\n        </div>\n      </div>\n    )\n  }\n}\n\nSearch.propTypes = {\n  onSelectRepository: PropTypes.func.isRequired,\n};\n\nexport default Search;\n\n\n// const mapDispatchToProps = {onSelectRepository};\n// export default connect(\n//   null,\n//   mapDispatchToProps\n// )(withRouter(Search))","import React, {Component, Fragment} from 'react';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\n\n\nclass RepositoryTopContributors extends Component {\n  state = {\n    fetching: true,\n    contributors: [],\n  };\n\n  async componentDidMount() {\n    const {repository} = this.props;\n    const {data} = await axios.get(repository.contributors_url);\n    this.setState({\n      fetching: false,\n      contributors: data ? data.slice(0, 5) : [],\n    });\n  }\n\n  render() {\n    const {contributors, fetching} = this.state;\n\n    if (fetching) {\n      return (\n        <Fragment>\n          <div className=\"loader\" id=\"loader\">\n            <span/>\n            <span/>\n            <span/>\n          </div>\n        </Fragment>\n      );\n    }\n\n    if (contributors && !contributors.length) {\n      return (\n        <div>No contributors for this repository</div>\n      )\n    }\n\n    const contributorsRows = contributors.map(contributor => {\n      return (\n        <tr key={contributor.login}>\n          <td>\n            <img\n              src={contributor.avatar_url}\n              alt=\"contributor avatar\"\n              style={{\n                height: '24px',\n                marginRight: '10px',\n                width: '24px',\n              }}\n            />\n            <a target=\"_blank\" href={contributor.html_url} rel=\"noopener noreferrer\">{contributor.login}</a>\n          </td>\n          <td>{contributor.contributions.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')}</td>\n        </tr>\n      )\n    });\n\n    return (\n\n      <table className=\"summary-table contributors-table\">\n        <thead>\n        <tr>\n          <th>User</th>\n          <th>Contributions</th>\n        </tr>\n        </thead>\n        <tbody>\n        {contributorsRows}\n        </tbody>\n      </table>\n    )\n  };\n}\n\nRepositoryTopContributors.propTypes = {\n  repository: PropTypes.object.isRequired,\n};\n\nexport default RepositoryTopContributors;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst RepositorySummaryDetails = props => {\n  const {repository} = props;\n  const {owner} = repository;\n\n  return (\n    <table className=\"summary-table\">\n      <tbody>\n      <tr>\n        <td>\n          <b>Name: </b>\n        </td>\n        <td>\n          <a target=\"_blank\" href={repository.html_url} rel=\"noopener noreferrer\">{repository.name} </a>\n\n          <img\n            alt={owner.login}\n            src={owner.avatar_url}\n            style={{\n              height: '24px',\n              marginRight: '10px',\n              width: '24px',\n            }}\n          />\n        </td>\n      </tr>\n\n      {repository.homepage && <tr>\n        <td>\n          <b>Homepage:</b>\n        </td>\n        <td>\n          <a href={repository.homepage} target=\"_blank\" rel=\"noopener noreferrer\">{repository.homepage}</a>\n        </td>\n      </tr>}\n\n      <tr>\n        <td>\n          <b>Type: </b>\n        </td>\n        <td>{owner.type}</td>\n      </tr>\n\n      {repository.description && <tr>\n        <td>\n          <b>Description: </b>\n        </td>\n        <td>{repository.description}</td>\n      </tr>}\n\n      <tr>\n        <td>\n          <b>Stars:</b>\n        </td>\n        <td><span>&#9733; {repository.stargazers_count.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')}</span>\n        </td>\n      </tr>\n\n      <tr>\n        <td>\n          <b>Watchers:</b>\n        </td>\n        <td><span>{repository.watchers_count.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')}</span>\n        </td>\n      </tr>\n\n      <tr>\n        <td>\n          <b>Created at:</b>\n        </td>\n        <td><span>{new Date(repository.created_at).toDateString()}</span></td>\n      </tr>\n\n      <tr>\n        <td>\n          <b>Open issues:</b>\n        </td>\n        <td><span>{repository.open_issues_count.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')}</span>\n        </td>\n      </tr>\n      </tbody>\n    </table>\n\n  )\n};\n\nRepositorySummaryDetails.propTypes = {\n  repository: PropTypes.object.isRequired,\n};\n\nexport default RepositorySummaryDetails;","import React, {Component} from 'react'\nimport PropTypes from 'prop-types';\nimport RepositoryTopContributors from \"src/components/RepositoryTopContributors\";\nimport RepositorySummaryDetails from \"src/components/RepositorySummaryDetails\";\n\nclass Summary extends Component {\n\n  render() {\n    const {repositoryToShow: repository} = this.props;\n\n    return (\n      <div>\n        <button className=\"btn btn-primary\" onClick={this.props.onBackToSearch}>Back to search</button>\n        <div className=\"row\">\n          <div className=\"col-md-8\">\n            <h3>Repository summary:</h3>\n\n            <RepositorySummaryDetails repository={repository}/>\n          </div>\n\n          <div className=\"col-md-4\">\n            <h3>Top contributors:</h3>\n\n            <RepositoryTopContributors repository={repository}/>\n          </div>\n        </div>\n      </div>\n\n    )\n  }\n}\n\nSummary.propTypes = {\n  repositoryToShow: PropTypes.object.isRequired,\n  onBackToSearch: PropTypes.func.isRequired,\n};\n\nexport default Summary;\n\n// const mapStateToProps = state => ({ repositoryToShow: state.repositories.repositoryToShow });\n//\n// export default connect(\n//   mapStateToProps,\n//   null\n// )(withRouter(Summary))","import PropTypes from 'prop-types';\nimport React from 'react';\nimport {Highlighter} from 'react-bootstrap-typeahead';\n\nconst GithubRepositoryItem = ({repository, optionsProps, highlightMatches}) => {\n  const {owner: {login, avatar_url}} = repository;\n\n  const getRepositoryName = () => {\n    if (highlightMatches) {\n      return (\n        <Highlighter search={optionsProps.text}>\n          {repository.name}\n        </Highlighter>\n      );\n    }\n\n    return <span>{repository.name}</span>;\n  };\n\n  return (\n    <div>\n      <img\n        alt={login}\n        src={avatar_url}\n        style={{\n          height: '24px',\n          marginRight: '10px',\n          width: '24px',\n        }}\n      />\n      {getRepositoryName()}\n\n    </div>\n  )\n};\n\nGithubRepositoryItem.propTypes = {\n  repository: PropTypes.object.isRequired,\n  optionsProps: PropTypes.object.isRequired,\n  highlightMatches: PropTypes.bool,\n};\n\nexport default GithubRepositoryItem;\n","import React, {Component, Fragment} from 'react';\nimport './App.css';\nimport './components/components.css';\nimport Summary from 'src/summary/Summary';\nimport Search from 'src/search/Search';\n\nclass GithubRepositoriesApp extends Component {\n  state = {\n    repositoryToShow: null\n  };\n\n  onSelectRepository = repositoryToShow => {\n    this.setState({\n      repositoryToShow\n    });\n  };\n\n  onBackToSearch = () => {\n    this.setState({\n      repositoryToShow: null\n    });\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <div className=\"container\">\n          <div className=\"jumbotron\">\n            <h1>GitHub repositories search</h1>\n            <p>This is a sample app to demonstrate v3 GitHub api for searching repositories</p>\n            <small>By Royee Shemesh</small>\n            <hr/>\n\n            {!this.state.repositoryToShow && <Search onSelectRepository={this.onSelectRepository}/>}\n            {this.state.repositoryToShow && <Summary repositoryToShow={this.state.repositoryToShow} onBackToSearch={this.onBackToSearch}/>}\n\n          </div>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default GithubRepositoriesApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GithubRepositoriesApp from './App';\n\nReactDOM.render(\n  <GithubRepositoriesApp/>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}